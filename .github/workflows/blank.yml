# This is a basic workflow to help you get started with Actions

name: VM Automation CI Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
      #     terraform --version

      - uses: hashicorp/setup-terraform@v3

      - name: Check Terraform Instellation
        run: terraform --version

      - name: ls
        run: ls -la

      - name: Terraform Initialization
        run: terraform init  # Initializes Terraform in the working directory

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan -out=tfplan  # Generates the Terraform execution plan

      # - name: Terraform Apply
      #   env:
      #     TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      #     TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      #     TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      #   run: terraform apply -auto-approve

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply --auto-approve