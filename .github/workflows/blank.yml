# This is a basic workflow to help you get started with Actions

name: VM Automation CI Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     env:
#       AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
#       AZURE_CLIENT_ID: ${{ secrets.CLIENTID }}
#       AZURE_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
#       AZURE_TENANT_ID: ${{ secrets.TENANTID }}

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v4

#       - uses: hashicorp/setup-terraform@v3

#       - name: Check Terraform Instellation
#         run: terraform --version

#       - name: ls
#         run: ls -la

#       - name: Terraform Initialization
#         run: terraform init  # Initializes Terraform in the working directory

#       # - name: Terraform Plan
#       #   id: plan
#       #   run: terraform plan -out=tfplan  # Generates the Terraform execution plan

#       # - name: Terraform Apply
#       #   env:
#       #     TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#       #     TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
#       #     TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
#       #     TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
#       #   run: terraform apply -auto-approve

#       - name: Terraform Plan
#         run: terraform plan

#       - name: Terraform Apply
#         run: terraform apply -auto-approve

jobs:
  terraform:
    runs-on: ubuntu-latest
    # env:
    #   AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
    #   AZURE_CLIENT_ID: ${{ secrets.CLIENTID }}
    #   AZURE_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
    #   AZURE_TENANT_ID: ${{ secrets.TENANTID }}
    steps:        
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Initialization
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve